trigger:
- main

pool:
  name: Default

variables:
  buildConfiguration: 'Release'

steps:
# 🔧 .NET SDK Setup
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# 🔑 Enable OAuth token for push
- checkout: self
  persistCredentials: true

# 🏗️ Build your library
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build Class Library'

# 📦 Pack it up
- script: dotnet pack StringExtensionsLibrary/StringExtensionsLibrary.csproj -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)
  displayName: 'Pack NuGet Package'

# 💣 REMOVE old source (if it exists) to prevent error
- script: |
    dotnet nuget remove source StringLibSource || echo "Source did not exist, moving on..."
  displayName: 'Clean Previous NuGet Source'

# 🔁 ADD source (fresh + clean)
- script: |
    dotnet nuget add source "https://pkgs.dev.azure.com/nnathial/CI-CD-AzureArtifacts/_packaging/StringLibFeed/nuget/v3/index.json" ^
    --name StringLibSource ^
    --username AzureDevOps ^
    --password $(System.AccessToken) ^
    --store-password-in-clear-text
  displayName: 'Add NuGet Feed Source'

# 🚀 PUSH like a boss
- script: |
    dotnet nuget push "$(Build.ArtifactStagingDirectory)\*.nupkg" ^
    --source StringLibSource ^
    --api-key AzureDevOps
  displayName: 'Push NuGet Package to Azure Artifacts'
