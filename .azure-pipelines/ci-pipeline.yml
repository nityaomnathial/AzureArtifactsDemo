trigger:
- main

pool:
  name: Default  # Self-hosted agent

variables:
  buildConfiguration: 'Release'

steps:
# 🧱 Use .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# 🔐 Enable access to OAuth token
- checkout: self
  persistCredentials: true

# 🏗️ Build the library
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build Class Library'

# 📦 Pack into a NuGet package
- script: dotnet pack StringExtensionsLibrary/StringExtensionsLibrary.csproj -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)
  displayName: 'Pack NuGet Package'

# 🧹 Remove old feed source (if already added in a previous run)
- script: |
    dotnet nuget remove source StringLibSource || echo "Source did not exist, moving on..."
  displayName: 'Remove Previous NuGet Source (Safe Cleanup)'

# 🔁 Add your Azure Artifact feed source manually
- script: |
    dotnet nuget add source "https://pkgs.dev.azure.com/nnathial/CI-CD-AzureArtifacts/_packaging/StringLibFeed/nuget/v3/index.json" ^
    --name StringLibSource ^
    --username AzureDevOps ^
    --password $(System.AccessToken) ^
    --store-password-in-clear-text
  displayName: 'Add NuGet Feed Source'

# 🚀 Push the package, skip if already exists (no red ❌)
- script: |
    dotnet nuget push "$(Build.ArtifactStagingDirectory)\*.nupkg" ^
    --source StringLibSource ^
    --api-key AzureDevOps ^
    --skip-duplicate
  displayName: 'Push NuGet Package to Azure Artifacts (Safe Push)'
